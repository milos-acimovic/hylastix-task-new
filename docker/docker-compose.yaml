services:
  postgres:
    image: postgres:17
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: keycloakdb
      POSTGRES_USER: keycloakusr
      POSTGRES_PASSWORD: secret
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - keycloak-net

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.4
    container_name: keycloak
    restart: unless-stopped
    command:
      - start-dev
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin123
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloakdb
      KC_DB_USERNAME: keycloakusr
      KC_DB_PASSWORD: secret
      KC_HTTP_ENABLED: "true"
      KC_HTTP_PORT: "8080"
      KC_PROXY: "edge"
      KC_HOSTNAME: "172.173.169.36"
      KC_HOSTNAME_PORT: "8080"
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_HTTPS_REQUIRED: "none"
    depends_on:
      - postgres
    networks:
      - keycloak-net
    ports:
      - "8080:8080"

#  oauth2-proxy:
#    image: quay.io/oauth2-proxy/oauth2-proxy:v7.6.0
#    container_name: oauth2-proxy
#    restart: unless-stopped
#    environment:
#      OAUTH2_PROXY_PROVIDER: keycloak-oidc
#      OAUTH2_PROXY_CLIENT_ID: static-app
#      OAUTH2_PROXY_CLIENT_SECRET: your-client-secret
#      OAUTH2_PROXY_COOKIE_SECRET: "a-32-byte-random-string-base64"
#      OAUTH2_PROXY_COOKIE_SECURE: "false"
#      OAUTH2_PROXY_EMAIL_DOMAINS: "*"
#      OAUTH2_PROXY_OIDC_ISSUER_URL: http://keycloak:8080/keycloak/realms/myrealm
#      OAUTH2_PROXY_REDIRECT_URL: http://localhost/oauth2/callback
#      OAUTH2_PROXY_UPSTREAMS: "file:///dev/null"
#    ports:
#      - "4180:4180"
#    depends_on:
#      - keycloak
#    networks:
#      - keycloak-net

#  nginx:
#    image: nginx:alpine
#    container_name: nginx
#    restart: unless-stopped
#    volumes:
#      - /opt/app/docker/page:/usr/share/nginx/html:ro
#      - /opt/app/nginx.conf:/etc/nginx/nginx.conf:ro
##    depends_on:
##      - oauth2-proxy
#    networks:
#      - keycloak-net
#    ports:
#      - "80:80"

volumes:
  postgres_data:

networks:
  keycloak-net:
    name: keycloak-net